name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  editorconfig-checker:
    name: EditorConfig Checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint Markdown Files
        run: npx markdown-cli *.md

  flake8:
    name: Flake8 Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: "flake8"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  unittest:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Install dependencies
        run: pip install -r src/requirements.txt
      - name: Run Unit Tests
        run: python3 -m unittest discover src

  database_test:
    needs: [ unittest, flake8, makrdown-lint, editorconfig-checker ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.16
      - name: Install dependencies
        run: pip install -r src/requirements.txt
      - name: Run SQLite tests
        run: python3 -m unittest src/app_test.py

  sonarcloud:
    name: SonarCloud Analysis
    needs: [ database_test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk:
    name: Snyk Security Check
    needs: [ unittest ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Snyk
        working-directory: ${{ github.workspace }}/src
        run: |
          pip install -r requirements.txt
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test
