name: CI 

on: [push]

jobs:
  editorconfig-checker:
    name: editorconfig-checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  markdown-lint:
    name: makdown-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npx markdown-cli *.md

  flake8:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.16
          architecture: x64
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: "flake8" # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  unittest:
    name: unittest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.16
          architecture: x64
      - name: Install dependencies
        run: pip install -r src/requirements.txt
      - name: Execute Unit Tests
        run: python3 -m unittest src/app_test.py

  database_test:
    needs: [ unittest, flake8, markdown-lint, editorconfig-checker ]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: joshuaavalon/flyway-action@v3.0.0
        with:
          url: jdbc:postgresql://postgres:5432/db
          user: user
          password: password
      - run: echo 'testing'

  sonarcloud:
    needs: [ database_test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk:
    needs: [ database_test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python Dependencies
        run: pip install -r src/requirements.txt
      - name: Install Snyk
        run: npm install -g snyk
      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      - name: Test with Snyk
        working-directory: src
        run: snyk test



  push-docker-image:
    needs: [ snyk, sonarcloud ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'classwork-image'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker image
      run: docker build -t "classwork-image" .
    - name: Docker Tag
      run: docker tag "classwork-image" ${{ secrets.DOCKER_USERNAME }}"/classwork-image"
    - name: Docker Push
      run: docker push ${{ secrets.DOCKER_USERNAME }}"/classwork-image"