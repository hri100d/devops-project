name: CI

on: [push]

jobs:
  editorconfig-checker:
    name: editorconfig-checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  markdown-lint:
    name: makdown-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npx markdown-cli *.md

  flake8:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.16
          architecture: x64
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: "flake8"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  unittest:
    name: unittest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.16
          architecture: x64
      - name: Install dependencies
        run: pip install -r src/requirements.txt
      - name: Execute Unit Tests
        run: python3 -m unittest src/app_test.py

  database_test:
    needs: [ unittest, flake8, markdown-lint, editorconfig-checker ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.16
      - name: Install dependencies
        run: pip install -r src/requirements.txt
      - name: Run SQLite tests
        run: python3 -m unittest src/app_test.py

  sonarcloud:
    needs: [ database_test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk:
    needs: [ database_test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Install Node.js dependencies
        run: npm install -g snyk
      - name: Run Snyk
        run: |
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test
          snyk fix


